<!DOCTYPE html>
<html>

<head>
    <title>Logs Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>

<body class="bg-gray-50 min-h-screen text-gray-900">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div class="bg-white border border-gray-200 rounded-lg shadow-md p-6">
            <!-- Header -->
            <div class="flex items-center justify-between mb-6">
                <h2 class="text-xl font-semibold text-gray-800">System Logs</h2>
                <div class="flex items-center space-x-4">
                    <select id="logFilter"
                        class="bg-gray-100 border border-gray-300 rounded-md px-3 py-1 text-sm text-gray-700 focus:outline-none focus:ring focus:border-blue-300">
                        <option value="all">All</option>
                        <option value="info">Info</option>
                        <option value="error">Error</option>
                    </select>
                    <a href="/logout"
                        class="bg-black text-white hover:bg-gray-800 font-semibold rounded-md px-4 py-2 text-sm transition-colors">
                        Logout
                    </a>
                </div>
            </div>

            <!-- Table -->
            <div class="overflow-x-auto">
                <table class="w-full text-left border-collapse">
                    <thead>
                        <tr class="bg-gray-100 border-b border-gray-200">
                            <th class="py-2 px-4 text-sm font-medium text-gray-600">Time</th>
                            <th class="py-2 px-4 text-sm font-medium text-gray-600">Level</th>
                            <th class="py-2 px-4 text-sm font-medium text-gray-600">Message</th>
                            <th class="py-2 px-4 text-sm font-medium text-gray-600">Details</th>
                        </tr>
                    </thead>
                    <tbody id="logTableBody" class="divide-y divide-gray-200">
                        <% logs.reverse().forEach(log=> { %>
                            <tr class="hover:bg-gray-50 transition-colors log-entry" data-level="<%= log.level %>">
                                <td class="py-2 px-4 text-sm text-gray-500">
                                    <%= new Date(log.timestamp).toLocaleString() %>
                                </td>
                                <td class="py-2 px-4 text-sm">
                                    <span
                                        class="px-2 py-1 rounded-full text-xs font-medium
                                        <%= log.message.includes('error') ? 'bg-red-100 text-red-800' : log.message.includes('warning') ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800' %>">
                                        <%= log.message.includes('error') ? 'error' : log.message.includes('warning') ? 'warning' : 'info' %>
                                    </span>
                                </td>
                                <td class="py-2 px-4 text-sm text-gray-500">
                                    <span class="<%= log.message === 'Deployment successful' ? 'text-green-600' : 'text-gray-500' %>">
                                        <%= log.message %>
                                    </span>
                                </td>
                                <td class="py-2 px-4 text-sm text-gray-500">
                                    <% if (Object.keys(log).length > 3) { %>
                                        <details>
                                            <summary class="cursor-pointer text-blue-600 hover:text-blue-800">View Details</summary>
                                            <div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
                                                <div class="bg-white rounded-lg p-6 max-w-2xl w-full mx-4">
                                                    <div class="flex justify-between items-center mb-4">
                                                        <h3 class="text-lg font-medium">Log Details</h3>
                                                        <button onclick="this.closest('.fixed').remove()" class="text-gray-500 hover:text-gray-700">
                                                            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                                                                <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                                                            </svg>
                                                        </button>
                                                    </div>
                                                    <pre class="text-xs text-gray-600 overflow-x-auto max-h-96 bg-gray-50 p-4 rounded"><%= JSON.stringify(Object.fromEntries(Object.entries(log).filter(([key]) => !['level', 'message', 'timestamp'].includes(key))), null, 2).replace(/\\n/g, '\n') %></pre>
                                                </div>
                                            </div>
                                        </details>
                                    <% } %>
                                </td>
                            </tr>
                            <% }); %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <script>
        function filterLogs(level) {
            const entries = document.querySelectorAll('.log-entry');
            entries.forEach(entry => {
                if (level === 'all' || entry.dataset.level === level) {
                    entry.style.display = '';
                } else {
                    entry.style.display = 'none';
                }
            });
        }

        // Set up WebSocket connection
        const ws = new WebSocket(`ws://${window.location.hostname}:${window.location.port}`);
        
        ws.onmessage = function(event) {
            const log = JSON.parse(event.data);
            
            // Create new row
            const tr = document.createElement('tr');
            tr.className = 'hover:bg-gray-50 transition-colors log-entry';
            tr.dataset.level = log.level;
            
            // Format the row HTML
            tr.innerHTML = `
                <td class="py-2 px-4 text-sm text-gray-500">
                    ${new Date(log.timestamp).toLocaleString()}
                </td>
                <td class="py-2 px-4 text-sm">
                    <span class="px-2 py-1 rounded-full text-xs font-medium 
                        ${log.message.includes('error') ? 'bg-red-100 text-red-800' : 
                          log.message.includes('warning') ? 'bg-yellow-100 text-yellow-800' : 
                          'bg-green-100 text-green-800'}">
                        ${log.message.includes('error') ? 'error' : 
                          log.message.includes('warning') ? 'warning' : 'info'}
                    </span>
                </td>
                <td class="py-2 px-4 text-sm text-gray-500">
                    <span class="${log.message === 'Deployment successful' ? 'text-green-600' : 'text-gray-500'}">
                        ${log.message}
                    </span>
                </td>
                <td class="py-2 px-4 text-sm text-gray-500">
                    ${Object.keys(log).length > 3 ? `
                        <details>
                            <summary class="cursor-pointer text-blue-600 hover:text-blue-800">View Details</summary>
                            <div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
                                <div class="bg-white rounded-lg p-6 max-w-2xl w-full mx-4">
                                    <div class="flex justify-between items-center mb-4">
                                        <h3 class="text-lg font-medium">Log Details</h3>
                                        <button onclick="this.closest('.fixed').remove()" class="text-gray-500 hover:text-gray-700">
                                            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                                                <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                                            </svg>
                                        </button>
                                    </div>
                                    <pre class="text-xs text-gray-600 overflow-x-auto max-h-96 bg-gray-50 p-4 rounded">${JSON.stringify(Object.fromEntries(Object.entries(log).filter(([key]) => !['level', 'message', 'timestamp'].includes(key))), null, 2)}</pre>
                                </div>
                            </div>
                        </details>
                    ` : ''}
                </td>
            `;

            // Insert at the top of the table
            const tbody = document.getElementById('logTableBody');
            tbody.insertBefore(tr, tbody.firstChild);

            // Apply current filter
            const currentFilter = document.getElementById('logFilter').value;
            if (currentFilter !== 'all' && log.level !== currentFilter) {
                tr.style.display = 'none';
            }
        };

        document.getElementById('logFilter').addEventListener('change', (e) => {
            filterLogs(e.target.value);
        });
    </script>
</body>

</html>